"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
const TaskStatus_1 = global[Symbol.for('ioc.use')]("App/Enums/TaskStatus");
class TaskValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            title: Validator_1.schema.string(),
            description: Validator_1.schema.string(),
            status: Validator_1.schema.enum(TaskStatus_1.TaskStatusList),
            user_id: Validator_1.schema.number([Validator_1.rules.exists({ table: "users", column: "id" })]),
        });
        this.messages = {
            "title.*": "Titre invalide",
            "description.*": "Description invalide",
            "status.*": "Status incorrect",
            "user_id.*": "ID utilisateur incorrect",
        };
    }
}
exports.default = TaskValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFza1ZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlRhc2tWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyRUFBMkU7QUFFM0UsMkVBQXNEO0FBRXRELE1BQXFCLGFBQWE7SUFDaEMsWUFBc0IsR0FBd0I7UUFBeEIsUUFBRyxHQUFILEdBQUcsQ0FBcUI7UUFFdkMsV0FBTSxHQUFHLGtCQUFNLENBQUMsTUFBTSxDQUFDO1lBQzVCLEtBQUssRUFBRSxrQkFBTSxDQUFDLE1BQU0sRUFBRTtZQUN0QixXQUFXLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLEVBQUU7WUFDNUIsTUFBTSxFQUFFLGtCQUFNLENBQUMsSUFBSSxDQUFDLDJCQUFjLENBQUM7WUFDbkMsT0FBTyxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDekUsQ0FBQyxDQUFDO1FBYUksYUFBUSxHQUFtQjtZQUNoQyxTQUFTLEVBQUUsZ0JBQWdCO1lBQzNCLGVBQWUsRUFBRSxzQkFBc0I7WUFDdkMsVUFBVSxFQUFFLGtCQUFrQjtZQUM5QixXQUFXLEVBQUUsMEJBQTBCO1NBQ3hDLENBQUM7SUF6QitDLENBQUM7Q0EwQm5EO0FBM0JELGdDQTJCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNjaGVtYSwgQ3VzdG9tTWVzc2FnZXMsIHJ1bGVzIH0gZnJvbSBcIkBpb2M6QWRvbmlzL0NvcmUvVmFsaWRhdG9yXCI7XG5pbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tIFwiQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dFwiO1xuaW1wb3J0IHsgVGFza1N0YXR1c0xpc3QgfSBmcm9tIFwiQXBwL0VudW1zL1Rhc2tTdGF0dXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFza1ZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjdHg6IEh0dHBDb250ZXh0Q29udHJhY3QpIHt9XG5cbiAgcHVibGljIHNjaGVtYSA9IHNjaGVtYS5jcmVhdGUoe1xuICAgIHRpdGxlOiBzY2hlbWEuc3RyaW5nKCksXG4gICAgZGVzY3JpcHRpb246IHNjaGVtYS5zdHJpbmcoKSxcbiAgICBzdGF0dXM6IHNjaGVtYS5lbnVtKFRhc2tTdGF0dXNMaXN0KSxcbiAgICB1c2VyX2lkOiBzY2hlbWEubnVtYmVyKFtydWxlcy5leGlzdHMoeyB0YWJsZTogXCJ1c2Vyc1wiLCBjb2x1bW46IFwiaWRcIiB9KV0pLFxuICB9KTtcblxuICAvKipcbiAgICogQ3VzdG9tIG1lc3NhZ2VzIGZvciB2YWxpZGF0aW9uIGZhaWx1cmVzLiBZb3UgY2FuIG1ha2UgdXNlIG9mIGRvdCBub3RhdGlvbiBgKC4pYFxuICAgKiBmb3IgdGFyZ2V0aW5nIG5lc3RlZCBmaWVsZHMgYW5kIGFycmF5IGV4cHJlc3Npb25zIGAoKilgIGZvciB0YXJnZXRpbmcgYWxsXG4gICAqIGNoaWxkcmVuIG9mIGFuIGFycmF5LiBGb3IgZXhhbXBsZTpcbiAgICpcbiAgICoge1xuICAgKiAgICdwcm9maWxlLnVzZXJuYW1lLnJlcXVpcmVkJzogJ1VzZXJuYW1lIGlzIHJlcXVpcmVkJyxcbiAgICogICAnc2NvcmVzLioubnVtYmVyJzogJ0RlZmluZSBzY29yZXMgYXMgdmFsaWQgbnVtYmVycydcbiAgICogfVxuICAgKlxuICAgKi9cbiAgcHVibGljIG1lc3NhZ2VzOiBDdXN0b21NZXNzYWdlcyA9IHtcbiAgICBcInRpdGxlLipcIjogXCJUaXRyZSBpbnZhbGlkZVwiLFxuICAgIFwiZGVzY3JpcHRpb24uKlwiOiBcIkRlc2NyaXB0aW9uIGludmFsaWRlXCIsXG4gICAgXCJzdGF0dXMuKlwiOiBcIlN0YXR1cyBpbmNvcnJlY3RcIixcbiAgICBcInVzZXJfaWQuKlwiOiBcIklEIHV0aWxpc2F0ZXVyIGluY29ycmVjdFwiLFxuICB9O1xufVxuIl19